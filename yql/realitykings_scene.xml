<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" securityLevel="any" https="false">
   <bindings>
		<select itemPath="scene" produces="XML">
			<inputs>
			 <key id="url" type="xs:string" paramType="variable" required="true"/>
		   </inputs>
			<execute><![CDATA[
				
				var xpath = "//section[@class='section model__top'] | //div[@class='card-thumb']";
				
				var results = y.rest(url).accept('text/html').get().response;
				
				if (xpath) {
					results = <results>{y.xpath(results, xpath)}</results>;
				}
				var niceList = function(array, join, finalJoin) {
					if (array.length == 1) return array[0];
					var arr = array.slice(0), last = arr.pop();
					join = join || ', ';
					finalJoin = finalJoin || ' & ';
					return arr.join(join) + finalJoin + last;    
				};
				function zeroFill( number, width ) {
				  width -= number.toString().length;
				  if ( width > 0 )
				  {
					return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
				  }
				  return number + ""; // always return a string
				}
				var baseurl = 'http://www.realitykings.com';
				var responseXML = <scene></scene>;
				
				//var results = query.results;
				function processScene(scenedata, images) {
					//y.log(images);
					responseXML.site += <site>{scenedata..div.(@id=="trailer-desc-txt").a.text()}</site>;
					
					var title = scenedata.header.div.h1.text().trim();
					
					responseXML.title += <title>{title}</title>;
					
					var posterdata = scenedata..video.@poster.toString() || scenedata..div.(@class=="player-video").img.@src;
					

					responseXML.poster += <poster>{posterdata}</poster>;

					responseXML.id += <id>{posterdata.split('/').pop().match(/^[^-]+/)[0]}</id>;
					//mmddyy
					try{
					var releasedate = posterdata.split('/').pop().match(/\d{6}/)[0].match(/\d{1,2}/g);
					var date = new Date('20' + releasedate[2], releasedate[0]-1, releasedate[1]);
					responseXML.dateiso += <dateiso>{date.toISOString().substring(0,10)}</dateiso>;
					} catch(e) { y.log('date: ' + e); }
					
					responseXML.thumbs += <thumbs></thumbs>;
					responseXML.images += <images></images>;
					
					
					for each (var a in images.div.(@class=='card-thumb').a) {
						responseXML.images.image += <image>{a.@href}</image>;
						responseXML.thumbs.thumb += <thumb>{a.img.@src}</thumb>;
					}
					
					var castTemp = [];
					responseXML.models += <models></models>;
				
					for each (var a in scenedata..div.(@id=="trailer-desc-txt").h2.a) {
						model = <model></model>;
						model.model += <name>{a.text()}</name>;
						model.url += <url>{(a.@href.toString().substring(0, 4) == 'http' ? '' : baseurl ) + a.@href}</url>;
						castTemp.push(a.text());
						responseXML.models.model += model;
					}
					responseXML.cast = <cast>{castTemp.length > 0 ? niceList(castTemp) : "" }</cast>;
					
					var desc = scenedata..div.(@id=="trailer-desc-txt").p.text().toString().trim().replace(/\u2019/g, "'");
					responseXML.description += <desc>{desc}</desc>;
				}
				processScene(results.section, <images>{results..div.(@class=='card-thumb')}</images>);
				
				
				response.object = responseXML;
			]]></execute>
		</select>
	</bindings>
</table>
