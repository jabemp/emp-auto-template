<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" securityLevel="any" https="false">
	<meta>
   </meta>
   <bindings>
		<select itemPath="scenes.scene" produces="XML">
			<inputs>
				<key id="site" type="xs:string" paramType="path" required="true"/>
		   </inputs>
			<execute><![CDATA[
				var scheme = 'https';
				var baseurl = scheme + '://www.fakehub.com';
				
				site = site.toLowerCase().replace(/-/g, '');
				var sites = {
					'faketaxi': '5',
					'fakehuboriginals': '11',
					'publicagent': '6',
					'fakeagent': '4',
					'femaleagent': '7',
					'fakehospital': '3',
					'fakeagentuk': '1',
					'fakecop': '2'
 				};
 				var siteIDs = {
 					'5': 'fake-taxi',
					'11': 'fakehub-originals',
					'6': 'public-agent',
					'4': 'fake-agent',
					'7': 'female-agent',
					'3': 'fake-hospital',
					'1': 'fake-agent-uk',
					'2': 'fake-cop'
 				};
				
				var siteID = sites[site];
				var url = baseurl + '/tour/site/' + siteID + '/' + siteIDs[siteID] + '/';
				
				//html is FUBAR
				var xpath = '//div[@class="info"]';
				
				var fullresults = y.rest(url).accept('text/html').get().response;
				var results;
				if (xpath) {
					//y.log(results);
					results = y.xpath(fullresults, xpath);
					//y.log(results);
				} else {
					results = fullresults;
				}
				var niceList = function(array, join, finalJoin) {
					if (array.length == 1) return array[0];
					var arr = array.slice(0), last = arr.pop();
					join = join || ', ';
					finalJoin = finalJoin || ' & ';
					return arr.join(join) + finalJoin + last;    
				};
				function zeroFill( number, width ) {
				  width -= number.toString().length;
				  if ( width > 0 )
				  {
					return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
				  }
				  return number + ""; // always return a string
				}
				
				responseXML = <scenes></scenes>;
								
				function processScene(scenedata) {
					var scene = <scene></scene>;
					//y.log(scenedata);

					
					try {
						var searchtitle = scenedata.h3.text().toString().trim() + ' video - ';
						var searchxpath = '(//a[starts-with(@title,"' + searchtitle + '")])[1]';
						//y.log(searchxpath);
						var sceneurl = y.xpath(fullresults, searchxpath).@href.toString();
						
						scene.url += <url>{( sceneurl.substring(0, 4) == 'http' ? '' : baseurl ) + sceneurl}</url>;
					} catch(e) { y.log('url: ' + e);}
					
					
					try {
						var releasedate = scenedata.div.(@class == 'release-date').text().toString().trim();
						
						var date = new Date(releasedate);
						
						var datealtstring = date.getFullYear().toString().substring(2,4) + '.' + zeroFill(date.getMonth() + 1,2) + '.' + zeroFill(date.getDate(),2);
						scene.date += <date>{datealtstring}</date>;
						//scene.dateiso += <dateiso>{date.toISOString().substring(0,10)}</dateiso>;
					} catch(e) { y.log('date: ' + e);}
					responseXML.scenes += scene;
				}
				
				for each (var div in results) {
					processScene(div);
				}
				response.object = responseXML;
			]]></execute>
		</select>
	</bindings>
</table>
