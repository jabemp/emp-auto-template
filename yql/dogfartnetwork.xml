<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" securityLevel="any" https="false">
	<meta>
   </meta>
   <bindings>
		<select itemPath="scenes.scene" produces="XML">
			<inputs>
				<key id="mode" type="xs:string" paramType="variable" required="false"/>
				<key id="site" type="xs:string" paramType="variable" required="true"/>
		   </inputs>
			<execute><![CDATA[
				var xpath = "//div[contains(@class,'recent-updates') or contains(@class,'preview-image-container')]";
			
				var baseurl = '';
				var url = '';
				if (mode && mode == 'parent') {
					baseurl = 'http://www.dogfartnetwork.com';
					url = baseurl + '/tour/sites/' + site + '/';
				} else {
					baseurl = 'http://www.' + site.toLowerCase() + '.com';
					url = baseurl + '/tour/scenes/';
				}
				
				var results = y.rest(url).accept('text/html').get().response;
				//var results = y.tidy(html);
				if (xpath) {
					results = <results>{y.xpath(results, xpath)}</results>;
				}
				
				var niceList = function(array, join, finalJoin) {
					if (array.length == 1) return array[0];
					var arr = array.slice(0), last = arr.pop();
					join = join || ', ';
					finalJoin = finalJoin || ' & ';
					return arr.join(join) + finalJoin + last;    
				};
				function zeroFill( number, width ) {
				  width -= number.toString().length;
				  if ( width > 0 )
				  {
					return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
				  }
				  return number + ""; // always return a string
				}
				
				
				responseXML = <scenes></scenes>;
				//var results = query.results;
				function processScene(scenedata) {
					var scene = <scene></scene>;
					//y.log(scenedata);
				    try {
						var sceneurl = scenedata.a.@href.toString().replace(/\?.*/,'');
						scene.url += <url>{( sceneurl.substring(0, 4) == 'http' ? '' : baseurl ) + sceneurl}</url>;
					} catch (e) { y.log('url: ' + e); }
					
					try {
						/*var title = scenedata.div.h3.a.text().toString();
						if(!title) {
							title = scenedata..p.(@class=="scene-title").text().toString().trim();
						}*/
						var title = scenedata..h3.(@class=="scene-title").*.text().toString().trim();
						scene.title += <title>{title}</title>;
						scene.titleclean += <titleclean>{title.replace(/[^a-z0-9- ]/gi,"").replace(/\s+/g, " ")}</titleclean>;
						scene.titlecompare += <titlecompare>{title.replace(/\&/g,"and").replace(/[^a-z0-9- ]/gi,"").replace(/\s+/g, " ").toLowerCase().trim()}</titlecompare>;
					
					} catch (e) { y.log('title: ' + e); }
					responseXML.scenes += scene;
				}
				for each (var scene in results.div) {
					processScene(scene);
				}
				response.object = responseXML;
			]]></execute>
		</select>
	</bindings>
</table>