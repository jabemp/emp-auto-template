<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" securityLevel="any" https="false">
   <bindings>
		<select itemPath="" produces="XML">
			<inputs>
			 <key id="url" type="xs:string" paramType="variable" required="true"/>
		   </inputs>
			<execute><![CDATA[
				var baseurl = 'https://www.mofos.com';
				
				var xpath = "//h1[@class='title'] | //p[@class='desc'] | //a[@class='model-name'] | //a[@class='site-name'] | //div[@class='categories'] | //img[@class='playerbg-forbidden'] | //div[@class='released-views']/span[1]";
				
				var results = y.rest(url).accept('text/html').get().response;
				if (xpath) {
					results = <results>{y.xpath(results, xpath)}</results>;
				}
				
				var niceList = function(array, join, finalJoin) {
					if (array.length == 1) return array[0];
					if (array.length == 0) return "";
					var arr = array.slice(0), last = arr.pop();
					join = join || ', ';
					finalJoin = finalJoin || ' & ';
					return arr.join(join) + finalJoin + last;    
				};
				function zeroFill( number, width ) {
				  width -= number.toString().length;
				  if ( width > 0 )
				  {
					return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
				  }
				  return number + ""; // always return a string
				}
				
				
				var responseXML = <scene></scene>;
				
				function processScene(scenedata) {
					//var sceneurl = url;
					y.log(scenedata);
					var sceneid = url.match(/\d{4,}/)[0];
					
					responseXML.id += <id>{sceneid}</id>;
					
					try {
						var title = scenedata.h1.text().toString().replace(/\u00A0/g, ' ').trim();
						responseXML.title += <title>{title}</title>;
						responseXML.titleclean += <titleclean>{title.replace(/[^a-z0-9- ]/gi,"").replace(/\s+/g, " ")}</titleclean>;
					} catch(e) { y.log('title: ' + e); }
					
					try {
						var poster = 'https:' + '//static-ht.mofoscontent.com/scenes/' + sceneid + '/768x432.jpg';
						//old: 'https://i1.mfspics.com/scenes/' + sceneid + '/768x432.jpg';
						responseXML.poster += <poster>{poster}</poster>;
					} catch(e) { y.log('poster: ' + e); }
					
					try {
					    var models = y.xpath(scenedata,"//a[contains(@href,'/tour/girl')]");
				    
					    var castTemp = [];
					    responseXML.models += <models></models>;
				    
					    for each (var a in models) {
					    	model = <model></model>;
					    	model.model += <name>{a.text().trim() + ' ' + a.span.text().trim()}</name>;
					    	model.url += <url>{(a.@href.toString().substring(0, 4) == 'http' ? '' : baseurl ) + a.@href}</url>;
					    	castTemp.push(a.text().trim() + ' ' + a.span.text().trim());
					    	responseXML.models.model += model;
					    }
						responseXML.cast = <cast>{castTemp.length > 0 ? niceList(castTemp) : ""}</cast>
					} catch(e) { y.log('cast: ' + e); }
					
					try {
					    var tags = y.xpath(scenedata,"//div[@class='categories']/a");
				    
					    var tagsTemp = [];
				    
					    for each (var tag in tags) {
					    	tagsTemp.push(tag.text());
					    }
					    responseXML.tags += <tags>{tagsTemp.join(', ')}</tags>;
					} catch(e) { y.log('tags: ' + e); }
					
					try {
						responseXML.description += <desc>{scenedata.p.(@class == "desc").text().toString().trim()}</desc>;
					} catch(e) { y.log('desc: ' + e); }
					
				}
				processScene(results);
				
				
				response.object = responseXML;
			]]></execute>
		</select>
	</bindings>
</table>