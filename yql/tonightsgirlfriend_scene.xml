<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" securityLevel="any" https="false">
   <bindings>
		<select itemPath="scene" produces="XML">
			<inputs>
			 <key id="url" type="xs:string" paramType="variable" required="true"/>
		   </inputs>
			<execute><![CDATA[
			
				var xpath="//div[@class='container']";
				var baseurl = 'http://www.tonightsgirlfriend.com';
				
				var results = y.rest(url).accept('text/html').get().response;
				if (xpath) {
					results = <results>{y.xpath(results, xpath)}</results>;
				}	
				
				var niceList = function(array, join, finalJoin) {
					if (array.length == 1) return array[0];
					var arr = array.slice(0), last = arr.pop();
					join = join || ', ';
					finalJoin = finalJoin || ' & ';
					return arr.join(join) + finalJoin + last;    
				};
				function zeroFill( number, width ) {
				  width -= number.toString().length;
				  if ( width > 0 )
				  {
					return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
				  }
				  return number + ""; // always return a string
				}
				
				var responseXML = <scene></scene>;

				function processScene(scenedata) {
					
					try {
					responseXML.poster += <poster>{scenedata..img.(@class=='playcard').@src}</poster>;
					} catch (e) { y.log('poster: ' + e);}
					
					try {
					var releasedate = scenedata..span.(@class == "scenepage-date").text().toString().replace(/Added: /, '').trim();
					var parts = releasedate.split("-");
					//y.log(parts);
					var date = new Date(('20' + parts[2].toString()), parts[0] - 1, parts[1]);
					responseXML.dateiso += <dateiso>{date.toISOString().substring(0,10)}</dateiso>;
					} catch (e) { y.log('date: ' + e);}
					
					
					
					var models = y.xpath(scenedata,"//div[@class='scenepage-info']/p/a");
				
					var castTemp = [];
					responseXML.models += <models></models>;
				
					for each (var a in models) {
						model = <model></model>;
						model.model += <name>{a.text()}</name>;
						model.url += <url>{(a.@href.toString().substring(0, 4) == 'http' ? '' : baseurl ) + a.@href.toString().replace(/\?.*/,'')}</url>;
						castTemp.push(a.text());
						responseXML.models.model += model;
					}
					responseXML.title += <title>{castTemp.length > 0 ? niceList(castTemp) : "" }</title>;
					var additionalcast = scenedata..div.(@class == 'scenepage-info').p.text().toString().replace(/,/, '').trim();
					castTemp.push(additionalcast);
					responseXML.cast = <cast>{castTemp.length > 0 ? niceList(castTemp) : ""}</cast>
					

					responseXML.description += <desc>{scenedata..div.(@class == "scenepage-description").p.text().toString().trim()}</desc>;
				}
				processScene(results);
				
				
				response.object = responseXML;
			]]></execute>
		</select>
	</bindings>
</table>