<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" securityLevel="any" https="false">
   <bindings>
		<select itemPath="" produces="XML">
			<inputs>
			 <key id="url" type="xs:string" paramType="variable" required="true"/>
		   </inputs>
			<execute><![CDATA[
			
				var xpath = "//video | //div[@class='shoot-info']";

				var results = y.rest(url).accept('text/html').get().response;

				if (xpath) {
					results = <results>{y.xpath(results, xpath)}</results>;
				}
				
				
				var niceList = function(array, join, finalJoin) {
					if (array.length == 1) return array[0];
					var arr = array.slice(0), last = arr.pop();
					join = join || ', ';
					finalJoin = finalJoin || ' & ';
					return arr.join(join) + finalJoin + last;    
				};
				function zeroFill( number, width ) {
				  width -= number.toString().length;
				  if ( width > 0 )
				  {
					return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
				  }
				  return number + ""; // always return a string
				}
				function extractDomain(url) {
					var domain;
					//find & remove protocol (http, ftp, etc.) and get domain
					if (url.indexOf("://") > -1) {
						domain = url.split('/')[2];
					}
					else {
						domain = url.split('/')[0];
					}

					//find & remove port number
					domain = domain.split(':')[0];

					return domain;
				}
				var baseurl = 'https://www.kink.com';
				var responseXML = <scene></scene>;
				
				//var results = query.results;
				function processScene(scenedata) {
					
					var title = scenedata.div.h1.text().toString().trim().replace(/\u00A0/g, ' ').trim();
					responseXML.title += <title>{title}</title>;
					responseXML.titleclean += <titleclean>{title.replace(/[^a-z0-9- ]/gi,"").replace(/\s+/g, " ")}</titleclean>;
					
					
					var releasedate = scenedata.div.div.(@class=="columns").div[0].p[0].text().toString().trim().replace(/date: /, "");
					var date = new Date(releasedate);
					responseXML.dateiso += <dateiso>{date.toISOString().substring(0,10)}</dateiso>;
					
					responseXML.poster += <poster>{scenedata.video.@poster}</poster>;
					responseXML.trailer += <trailer>{scenedata.video.@src}</trailer>;
					
					responseXML.thumbs += <thumbs></thumbs>;
					responseXML.images += <images></images>;
					
					for each (var i in y.xpath(scenedata,"//img")) {
						responseXML.thumbs.thumb += <thumb>{i.@src}</thumb>;
						responseXML.images.image += <image>{i.@src.toString().replace(/\/(200|410)\//,"/830/")}</image>;
					}
					//responseXML.images.image += <image>{'https://cdnp.kink.com/imagedb/42478/i/h/830/16.jpg'}</image>;
					/*responseXML.images.image += <image>{'https://cdnp.kink.com/imagedb/42478/i/h/830/17.jpg'}</image>;
					responseXML.images.image += <image>{'https://cdnp.kink.com/imagedb/42478/i/h/830/18.jpg'}</image>;
					responseXML.images.image += <image>{'https://cdnp.kink.com/imagedb/42478/i/h/830/19.jpg'}</image>;*/
					var models = y.xpath(scenedata,"//a[contains(@href,'model')]");
				
					var castTemp = [];
					responseXML.models += <models></models>;
				
					for each (var a in models) {
						model = <model></model>;
						model.model += <name>{a.text()}</name>;
						model.url += <url>{(a.@href.toString().substring(0, 4) == 'http' ? '' : baseurl ) + a.@href}</url>;
						castTemp.push(a.text());
						responseXML.models.model += model;
					}
					responseXML.cast = <cast>{niceList(castTemp)}</cast>;
					
					var tags = y.xpath(scenedata,"//a[contains(@href,'/tag/')]");
				
					var tagsTemp = [];
				
					for each (var tag in tags) {
						tagsTemp.push(tag.text().toString().trim());
					}
					responseXML.tags += <tags>{tagsTemp.join(', ')}</tags>;
					
					
					var description = "";
					var descNode = scenedata..div.(@class == "description");
					for each(var child in descNode.*) {
						var tmp = child.toString().trim();
						if(tmp != "") {
							//y.log(child);
							description += tmp + '\n\n'; 
						}
					}
					
					responseXML.description += <desc>{description.replace(/(â\u20ac\u2122)/g, "'").replace(/(â\u20ac\u0153)/g,'"').replace(/(â\u20ac.)/g, '"')}</desc>;
				}
				
				processScene(results);
				
				
				response.object = responseXML;
			]]></execute>
		</select>
	</bindings>
</table>