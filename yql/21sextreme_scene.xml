<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" securityLevel="any" https="false">
   <bindings>
		<select itemPath="scene" produces="XML">
			<inputs>
			 <key id="url" type="xs:string" paramType="variable" required="true"/>
		   </inputs>
			<execute><![CDATA[
			
				var xpath="//div[@id='main'] | //script[contains(text(),'picPreview')]"
				
				var html = y.rest(url).accept('text/html').get().response;
				var results = y.tidy(html);
				if (xpath) {
					results = <results>{y.xpath(results, xpath)}</results>;
				}
				var niceList = function(array, join, finalJoin) {
					if (array.length == 1) return array[0];
					var arr = array.slice(0), last = arr.pop();
					join = join || ', ';
					finalJoin = finalJoin || ' & ';
					return arr.join(join) + finalJoin + last;    
				};
				function zeroFill( number, width ) {
				  width -= number.toString().length;
				  if ( width > 0 )
				  {
					return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
				  }
				  return number + ""; // always return a string
				}
				var baseurl = 'https://www.21sextreme.com';
				var responseXML = <scene></scene>;
				
				//var results = query.results;
				function processScene(scenedata) {
					var sceneurl = url;
					
					try {
						var title = scenedata..h1.(@class == "title").text().toString().replace(/\u00A0/g, ' ').trim();
						responseXML.title += <title>{title}</title>;
					} catch(e) { y.log('title: ' + e);}
					
					try {
						responseXML.poster += <poster>{scenedata..script.toString().match(/https:.[^"]+jpg/).toString().replace(/\\/g,"")}</poster>;
					} catch(e) { y.log('poster: ' + e);}
					
					try {
						var releasedatetemp = scenedata..div.(@class == "updatedDate").b;
						//y.log(releasedatetemp);
					
						var releasedate = releasedatetemp.text().toString().trim();
						//y.log(releasedate);
						var dateparts = releasedate.split('-');
						
						var date = new Date(dateparts[0], dateparts[1]-1, dateparts[2]);
						
						responseXML.dateiso = <dateiso>{date.toISOString().substring(0,10)}</dateiso>;
					} catch(e) { y.log('date: ' + e);}
					
					responseXML.thumbs += <thumbs></thumbs>;
					responseXML.images += <images></images>;
					
					try {
						var models = y.xpath(scenedata,"//div[@class='sceneCol sceneColActors']/a");
				
						var castTemp = [];
						responseXML.models += <models></models>;
				
						for each (var a in models) {
							model = <model></model>;
							model.model += <name>{a.text()}</name>;
							model.url += <url>{(a.@href.toString().substring(0, 4) == 'http' ? '' : baseurl ) + a.@href}</url>;
							castTemp.push(a.text());
							responseXML.models.model += model;
						}
						responseXML.cast = <cast>{castTemp.length > 0 ? niceList(castTemp) : "" }</cast>
					} catch(e) { y.log('cast: ' + e);}
					
					try {
						var tags = y.xpath(scenedata,"//div[@class='sceneCol sceneColCategories']/a");
				
						var tagsTemp = [];
				
						for each (var tag in tags) {
							tagsTemp.push(tag.text());
						}
						responseXML.tags += <tags>{tagsTemp.join(', ')}</tags>;
					} catch(e) { y.log('tags: ' + e);}
					
					try {
						var descNode = y.xpath(scenedata,"//div[@class='sceneDesc bioToRight showMore']");
						var description = "";
						var i = 0;
						for each(var child in descNode.*) {
							//y.log(child);
							var tmp = child.toString().trim();
							if(tmp != "" && i >= 1) {
								description += tmp + '\n\n'; 
							}
							i++;
						}
						responseXML.description += <desc>{description}</desc>;
					} catch(e) { y.log('desc: ' + e);}
				}
				processScene(results);
				
				
				response.object = responseXML;
			]]></execute>
		</select>
	</bindings>
</table>
