#!/bin/bash

###############
# COMMON 
###############

#work folder for logs and temporary files produced during processing
tempfolder="${HOME}/downloads/temp"

#variable scriptsfolder & configfolder is initialized in maketemplate.sh

#folder that contains default and site custom templates
templatefolder="${scriptsfolder}/../templates"

#white list file paysite networks, brazzers, naughtyamerica, xempire etc that contains sub sites
networks="${configfolder}/networks.txt"

#white list file with single independent site names
sites="${configfolder}/sites.txt"

#default template, you can override this in a custom network or site config by following naming convention:
#<network>_template.txt or <sitename>_template.txt (all lower case)
presentationtemplate="${templatefolder}/default_template.txt"

#optional bash script source friendly file with pre-configured variables related to a specific scene
preloadedvariables="${configfolder}/scenedata.cfg"

#should images be downloaded from paysite first to temporary folder before uploading to jerking
dlimages="0"

#don't touch this
trackername="empornium"

#tracker specific script
trackerconfig="${scriptsfolder}/${trackername}.sh"

#default category (Hardcore)
SCENE_CATEGORY=35

#1= upload as private template, 2=upload torrent directly
uploadmode="1"

###############
# SCREENS & IMAGE UPLOAD 
###############

#Movie ThumbNailer (MTN) location, used to create screens from media file in createscreens.sh
mtnfolder="${HOME}/utils/mtn-200808a-linux"

#Location of script responsible for creating screenshot image file
screensscript="${scriptsfolder}/createscreens.sh"

imageuploadscript="${scriptsfolder}/jerking_uploader.py"

#default size switch for happypenguin's image upload to jerking script, see script source for more info
scenepicsoption="-l"

###############
# TORRENT 
###############

#where media files will be extracted to so that your torrent client will find it when seeding
downloadfolder="${HOME}/downloads/torrents"

#folder where .torrent files with be created to
torrentfilefolder="${HOME}/downloads/_torrentfiles"

#Torrent file creator location, used in createtorrent.sh. 
torrentcreateclient="${HOME}/utils/py3createtorrent/py3createtorrent.py"
torrentcreatescript="${scriptsfolder}/createtorrent.sh"

#Your Empornium personal announce url
announceurl="CHANGEME"

#netscape /cURL friendly cookie format with valid session cookies to Emp. Find these in your cookie settings in your browser
trackercookiefile="${configfolder}/emp.txt"
#Example:
#Go to https://www.epochconverter.com/ and get a unix numeric timestamp well into the future.
# --------COOKIE START
## Netscape HTTP Cookie File
## http://curl.haxx.se/docs/http-cookies.html
## This file was generated by libcurl! Edit at your own risk.
#
##HttpOnly_www.empornium.me	FALSE	/	TRUE	<insert future epoch time>	cid	<insert cid value here>
##HttpOnly_www.empornium.me	FALSE	/	TRUE	<insert future epoch time>	sid	<insert sid value here>
# --------COOKIE END


trackerbaseurl="https://www.empornium.me"
trackeruploadurl="${trackerbaseurl}/upload.php"

#Folder to dump .torrent after upload. This is used when uploadmode=2
watchfolder="${HOME}/downloads/watch/rtorrent"

###############
# TAGS 
###############

#File with sed replace expressions to clean tags
#Optional, create tagfix_<sitename>.txt and/or tagfix_<network>.txt for custom site tag handing
tagfixfile="${configfolder}/tagfix.txt"

#static tags for sites
tagssitesfile="${configfolder}/tags_sites.txt"

#static tags for actors
tagsactorsfile="${configfolder}/tags_actors.txt"

#should the media file extension (eg: mp4) be added as tag?
addExtensionAsTag="0"

#add scene date as tag? 1 = yes, 0 = no
addDateAsTag="0"

#1=YYYY.MM.DD
#2=YYYY.MONTH
dateTagMode="2"

#Add media file FPS as tag
addFpsAsTag="1"

#filter for allowed fps values to include as tag
fpsList=("60")

###############
# YQL & WEB SERVER
###############

#YQL api url
yqlurl="http://query.yahooapis.com/v1/public/yql?format=xml"
yqldebug="debug=true"

#example: myserver.bestseedbox.com/joeschmoe/temp
publicfolder="${HOSTNAME}/${USER}/temp"
#public http address to the folder where YQL can fetch html data from
publicaddress="http://${publicfolder}"

#This folder is used to dump temporary html files that can be fetched via YQL
#example: /home/joeschmoe/www/joeschmoe.myserver.bestseedbox.com/joeschmoe/temp
localfolder="${HOME}/www/${USER}.${publicfolder}"

#the full url folder to where your yql tables are stored. Make sure you can fetch this url + /<sitename>.xml
yqltablestore="https://raw.githubusercontent.com/jabemp/emp-auto-template/main/yql"

#user agent when doing curl requests
useragent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36"

#Add a random number to table url, to force YQL to obtain a fresh copy your table xml again instead of their cache. 
#Not reccomended as a permanent enabled switch due to YQL TOS violation, which may result in a ban
cachebuster="0"

#should curl create a trace file for yql requests?
enabletrace="0"

#Not mandatory. To circumvent certains sites protected by Incapsula etc. Obtain your own API key @ https://phantomjscloud.com/
phantomjsAPIkey="CHANGEME"
